name: Build and Push Docker Image to AWS ECR

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Compile Luajit
        run: |
          git clone https://luajit.org/git/luajit.git
          cd luajit
          make && sudo make install
          cd ..

      - name: Compile lua-https
        run: |
          sudo apt update
          sudo apt install curl libcurl4-openssl-dev
          git clone https://github.com/love2d/lua-https.git
          cd lua-https
          cmake -Bbuild -S. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=install
          cmake --build build --target install
          cd ..
          cp lua-https/install/https.so .

      - name: Upload https lib
        uses: actions/upload-artifact@master
        with:
          name: httpslib
          path: lua-https/install/https.so
        
      - name: Build l√∂ve file
        run : |
          zip -r server.love src main.lua conf.lua 

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to AWS ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

      - name: Build Docker image
        run: |
          docker build -t chess-server .

      - name: Tag Docker image
        run: |
          docker tag chess-server:latest ${{ secrets.ECR_REPOSITORY }}/chess-server:latest

      - name: Push Docker image to AWS ECR
        run: |
          docker push ${{ secrets.ECR_REPOSITORY }}/chess-server:latest
